#!/usr/bin/env python
# Class autogenerated from /home/sam/Downloads/aldebaran_sw/nao/naoqi-sdk-2.1.4.13-linux64/include/alproxies/altouchproxy.h
# by Sammy Pfeiffer's <Sammy.Pfeiffer at student.uts.edu.au> generator
# You need an ALBroker running

from naoqi import ALProxy



class ALTouch(object):
    def __init__(self, session):
        self.proxy = None 
        self.session = session

    def force_connect(self):
        self.proxy = self.session.service("ALTouch")

    def getSensorList(self):
        """Return the list of sensors managed by touch module and return by TouchChangedevent.

        :returns std::vector<std::string>: A vector<std::string> of sensor names manage by ALTouch.
        """
        if not self.proxy:
            self.proxy = self.session.service("ALTouch")
        return self.proxy.getSensorList()

    def getStatus(self):
        """Return the current status of all Touch groups.

        :returns AL::ALValue: A vector of pair [name, bool], similar to TouchChanged event.
        """
        if not self.proxy:
            self.proxy = self.session.service("ALTouch")
        return self.proxy.getStatus()

    def ping(self):
        """Just a ping. Always returns true

        :returns bool: returns true
        """
        if not self.proxy:
            self.proxy = self.session.service("ALTouch")
        return self.proxy.ping()

    def version(self):
        """Returns the version of the module.

        :returns str: A string containing the version of the module.
        """
        if not self.proxy:
            self.proxy = self.session.service("ALTouch")
        return self.proxy.version()
