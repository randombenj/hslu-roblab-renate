#!/usr/bin/env python
# Class autogenerated from /home/sam/Downloads/aldebaran_sw/nao/naoqi-sdk-2.1.4.13-linux64/include/alproxies/albatteryproxy.h
# by Sammy Pfeiffer's <Sammy.Pfeiffer at student.uts.edu.au> generator
# You need an ALBroker running

from naoqi import ALProxy



class ALBattery(object):
    def __init__(self, session):
        self.proxy = None 
        self.session = session

    def force_connect(self):
        self.proxy = self.session.service("ALBattery")

    def enablePowerMonitoring(self, Enable):
        """Enable power monitoring

        :param bool Enable: True activate power monitoring
        """
        if not self.proxy:
            self.proxy = self.session.service("ALBattery")
        return self.proxy.enablePowerMonitoring(Enable)

    def getBatteryCharge(self):
        """Get the battery charge in percents

        :returns int: the percentage of remaining power
        """
        if not self.proxy:
            self.proxy = self.session.service("ALBattery")
        return self.proxy.getBatteryCharge()

    def ping(self):
        """Just a ping. Always returns true

        :returns bool: returns true
        """
        if not self.proxy:
            self.proxy = self.session.service("ALBattery")
        return self.proxy.ping()

    def version(self):
        """Returns the version of the module.

        :returns str: A string containing the version of the module.
        """
        if not self.proxy:
            self.proxy = self.session.service("ALBattery")
        return self.proxy.version()
